plugins {
    id 'org.springframework.boot' version '2.6.10'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.hanghae99'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.19.2'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // swagger
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //embedded-redis
    implementation 'it.ozimov:embedded-redis:0.7.2'
    implementation 'org.webjars.bower:bootstrap:4.3.1'
    implementation 'org.webjars.bower:vue:2.5.16'
    implementation 'org.webjars.bower:axios:0.17.1'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.4'
//    implementation 'org.webjars:stomp-websocket:2.3.3-1'
    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // Sentry
    implementation 'io.sentry:sentry-spring-boot-starter:6.4.1'
    implementation 'io.sentry:sentry-logback:6.4.1'

    // QueryDSL
//    implementation "com.querydsl:querydsl-jpa:5.0.0"
//    implementation "com.querydsl:querydsl-apt:5.0.0"

    // resizing
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.1'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '3.7.0'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.969'
}

tasks.named('test') {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip

///*
// * queryDSL 설정 추가
// */
//// querydsl에서 사용할 경로 설정
//def querydslDir = "$buildDir/generated/querydsl"
//// JPA 사용 여부와 사용할 경로를 설정
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//// build 시 사용할 sourceSet 추가
//sourceSets {
//    main.java.srcDir querydslDir
//}
//// querydsl 컴파일시 사용할 옵션 설정
//compileQuerydsl{
//    options.annotationProcessorPath = configurations.querydsl
//}
//// querydsl 이 compileClassPath 를 상속하도록 설정
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//    querydsl.extendsFrom compileClasspath
//}


jar {
    enabled = false
}

bootJar{
    archivesBaseName = 'app'
    archiveFileName = 'app.jar'
    archiveVersion = "0.0.0"
}